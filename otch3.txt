Процессы в Linux

Идентификация процессов:
Каждый процесс в ОС имеет свой иденитфикатор
Получить идентификатор процесса можно при помщи системного вызова getpid()
Получить идентификатор родительского процесса можно при помощи системного вызова getppid()
Програма, выводящая на экран идентификатор текущего и родительского процессов:

indukov@alexandr-Aspire-Z5751:~/OS_2025$ vim pr003.c

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main() {
        pid_t procid, parentprocid;
        procid = getpid();
        parentprocid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса: %d\n", procid, parentprocid);
        return 0;
}

indukov@alexandr-Aspire-Z5751:~/OS_2025$ vim pr003.c
indukov@alexandr-Aspire-Z5751:~/OS_2025$ indukov@alexandr-Aspire-Z5751:~/OS_2025$ gcc pr003.c -o pr003.out
indukov@alexandr-Aspire-Z5751:~/OS_2025$ ./pr003.out
Ид. текущего процесса: 9076
Ид. родительского процесса: 7104

При первом запуске программы видим id текущего процесса 9076, id родительского процесса - это id командной оболочки bash
indukov@alexandr-Aspire-Z5751:~/OS_2025$ ./pr003.out
Ид. текущего процесса: 9173
Ид. родительского процесса: 7104

При втором запуске программы id  текущего процесса поменыл своё значение, так как аналогчные предыдущие процессы завершились, а новый процесс получил новое значение id - 9173
id родительского процесса не поменялось, так как для запуска программы по-прежнему использовалась командная оболочка bash.
